{
	"name": "Sample - Get Parameters from Pipeline",
	"properties": {
		"description": "In this notebook we will take parameters (multiple) from our pipeline and use them",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4b9fcdfd-cb0c-4eca-861c-5bf05575d2fa"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7567b7de-befe-40fa-b883-40bb316ee50c/resourceGroups/Lab8/providers/Microsoft.Synapse/workspaces/asaworkspacelab8/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://asaworkspacelab8.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"tags": [
						"parameters"
					]
				},
				"source": [
					"SourceSystemName = \"\"\r\n",
					"StorageAccount = \"\"\r\n",
					"\r\n",
					"#Import MSSPARKUTILS package\r\n",
					"#from notebookutils import mssparkutils\r\n",
					"\r\n",
					"# Build ADLS Gen2 Storage Location by passing parameter values\r\n",
					"#root = f\"abfss://wwi-02@{StorageAccount}/{SourceSystemName}\"\r\n",
					"\r\n",
					"#Create Dataframe by reading CSV file\r\n",
					"# datadf = spark.read.load(path=root, sep = \"|\",escape = \"\", quote = \"\",header=\"true\", inferSchema=\"false\")\r\n",
					"\r\n",
					"#Create Dataframe by reading CSV file\r\n",
					"datadf = spark.read.load(\"abfss://wwi-02@\"+str(StorageAccount)+\".dfs.core.windows.net/\"+str(SourceSystemName), format=\"csv\", header=\"true\", sep=\"|\")\r\n",
					"\r\n",
					"# The abfss file path has to look like this : abfss://myfolder@asadatalakelab8.dfs.core.windows.net/subfolder\r\n",
					"# StorageAccount = asadatalakelab8.dfs.core.windows.net\r\n",
					"# SourceSystemName = sale-csv\r\n",
					"\r\n",
					"#Save Total Number of Records in an INT parameter\r\n",
					"Cnt = datadf.count()\r\n",
					"\r\n",
					"#Return Count Values\r\n",
					"mssparkutils.notebook.exit(Cnt)\r\n",
					""
				],
				"attachments": null,
				"execution_count": 13
			}
		]
	}
}